#------------------------------------------------------------------------------#
# JPPF.                                                                        #
#  Copyright (C) 2005-2014 JPPF Team.                                          #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

### direct log messages to stdout ###
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to jppf-driver.log ###
log4j.appender.JPPF=org.apache.log4j.FileAppender
log4j.appender.JPPF.File=jppf-driver-2.log
log4j.appender.JPPF.Append=false
log4j.appender.JPPF.layout=org.apache.log4j.PatternLayout
#log4j.appender.JPPF.layout.ConversionPattern=%d [%-5p][%c.%M(%L)]: %m\n
log4j.appender.JPPF.layout.ConversionPattern=%d [%-5p][%-20.20t][%c.%M(%L)]: %m\n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=INFO, JPPF
#log4j.rootLogger=DEBUG, JPPF

#log4j.logger.org.jppf.example.loadbalancer.server=DEBUG
#log4j.logger.org.jppf.classloader=DEBUG
#log4j.logger.org.jppf.classloader.AbstractJPPFClassLoader=INFO
#log4j.logger.org.jppf.classloader.LocalResourceRequest=DEBUG
#log4j.logger.org.jppf.comm.discovery=DEBUG
#log4j.logger.org.jppf.comm.discovery.JPPFBroadcaster=DEBUG
#log4j.logger.org.jppf.comm.discovery.JPPFMulticastReceiver=DEBUG
log4j.logger.org.jppf.comm.recovery=TRACE
#log4j.logger.org.jppf.io=TRACE
#log4j.logger.org.jppf.io.IOHelper=DEBUG
#log4j.logger.org.jppf.io.MultipleBuffersLocation=TRACE
log4j.logger.org.jppf.io.FileDataLocation=INFO
#log4j.logger.org.jppf.management=DEBUG
log4j.logger.org.jppf.management.JMXConnectionThread=INFO
#log4j.logger.org.jppf.management.NodeStatusNotifier=TRACE
#log4j.logger.org.jppf.management.diagnostics=DEBUG
#log4j.logger.org.jppf.management.forwarding=DEBUG
#log4j.logger.org.jppf.management.JMXServerFactory=DEBUG
#log4j.logger.org.jppf.management.JPPFDriverAdmin=DEBUG
#log4j.logger.org.jppf.node.policy.PolicyRuleTest=DEBUG
#log4j.logger.org.jppf.scheduling=DEBUG
#log4j.logger.org.jppf.serialization=DEBUG
#log4j.logger.org.jppf.server.NodeInformationHandler=DEBUG
#log4j.logger.org.jppf.server.job=DEBUG
#log4j.logger.org.jppf.server.job.JPPFJobManager=DEBUG
#log4j.logger.org.jppf.server.job.management=DEBUG
#og4j.logger.org.jppf.server.job.management.DriverJobManagement=DEBUG
#log4j.logger.org.jppf.server.management=DEBUG
log4j.logger.org.jppf.nio=INFO
#log4j.logger.org.jppf.nio.ChannelSelectorThread=DEBUG
log4j.logger.org.jppf.nio.PlainNioObject=INFO
#log4j.logger.org.jppf.nio.SimpleNioContext=TRACE
#log4j.logger.org.jppf.nio.SSLEngineManager=DEBUG
#log4j.logger.org.jppf.nio.SSLNioObject=TRACE
log4j.logger.org.jppf.nio.StateTransitionTask=DEBUG
#log4j.logger.org.jppf.nio.StateTransitionManager=DEBUG
#log4j.logger.org.jppf.server.nio.acceptor=DEBUG
#log4j.logger.org.jppf.server.nio.acceptor.IdentifyingPeerState=TRACE
#log4j.logger.org.jppf.server.nio.acceptor.AcceptorNioServer=DEBUG
#log4j.logger.org.jppf.server.nio.classloader=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.ClassContext=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.LocalClassContext=TRACE
#log4j.logger.org.jppf.server.nio.classloader.client=INFO
#log4j.logger.org.jppf.server.nio.classloader.client.ClientClassNioServer=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.client.SendingProviderRequestState=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.client.WaitingProviderResponseState=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.node=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.node.SendingNodeResponseState=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.node.WaitingNodeRequestState=DEBUG
#log4j.logger.org.jppf.server.nio.client=DEBUG
#log4j.logger.org.jppf.server.nio.client.ClientNioServer=DEBUG
#log4j.logger.org.jppf.server.nio.client.ClientContext=DEBUG
#log4j.logger.org.jppf.server.nio.client.CompletionListener=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver.AbstractNodeContext=DEBUG
log4j.logger.org.jppf.server.nio.nodeserver.NodeNioServer=DEBUG
log4j.logger.org.jppf.server.nio.nodeserver.TaskQueueChecker=INFO
#log4j.logger.org.jppf.server.nio.nodeserver.SendingBundleState=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver.SendInitialBundleState=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver.WaitInitialBundleState=DEBUG
#log4j.logger.org.jppf.server.nio.nodeserver.LocalNodeWrapperHandler=TRACE
#log4j.logger.org.jppf.server.nio.nodeserver.LocalNodeContext=DEBUG
#log4j.logger.org.jppf.classloader=DEBUG
#log4j.logger.org.jppf.server.node=DEBUG
#log4j.logger.org.jppf.server.node.AbstractNodeIO=INFO
#log4j.logger.org.jppf.server.node.local=INFO
#log4j.logger.org.jppf.server.node.local.LocalNodeIO=DEBUG
log4j.logger.org.jppf.server.peer=DEBUG
#log4j.logger.org.jppf.server.peer.PeerNode=DEBUG
#log4j.logger.org.jppf.server.peer.PeerNodeResultSender=DEBUG
#log4j.logger.org.jppf.server.protocol=DEBUG
#log4j.logger.org.jppf.server.protocol.AbstractServerJobBase=DEBUG
#log4j.logger.org.jppf.server.protocol.AbstractServerJob=DEBUG
#log4j.logger.org.jppf.server.protocol.ServerJob=DEBUG
#log4j.logger.org.jppf.server.protocol.ServerTaskBundleClient=DEBUG
#log4j.logger.org.jppf.server.queue=DEBUG
#log4j.logger.org.jppf.server.queue.JPPFPriorityQueue=DEBUG
#log4j.logger.org.jppf.server.queue.BroadcastJobCompletionListener=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.proportional=TRACE
#log4j.logger.org.jppf.server.scheduler.bundle.rl=DEBUG
#log4j.logger.org.jppf.server.scheduler.bundle.impl=TRACE
#log4j.logger.org.jppf.server.scheduler.bundle.spi.JPPFBundlerFactory=DEBUG
#log4j.logger.org.jppf.utils=INFO
#log4j.logger.org.jppf.utils.NetworkUtils=DEBUG
#log4j.logger.org.jppf.utils.ServiceFinder=DEBUG
#log4j.logger.org.jppf.utils.DirectBufferPool=DEBUG
log4j.logger.org.jppf.utils.SoftReferenceValuesMap=TRACE
#log4j.logger.org.jppf.utils.hooks=DEBUG
log4j.logger.org.apache.ftpserver=WARN
#log4j.logger.org.jppf.utils.streams.serialization=DEBUG
#log4j.logger.org.jppf.example.loadbalancer.server=DEBUG

