#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2014 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#


#------------------------------------------------------------------------------#
#                  Server SSL Settings                                         #
#------------------------------------------------------------------------------#

# SSL protocol, default to SSL
jppf.ssl.context.protocol = SSL
# a list of space-separated enabled protocols
jppf.ssl.protocols = SSLv2Hello SSLv3
# enabled cipher suites as a list of space-separated values
#jppf.ssl.cipher.suites = SSL_RSA_WITH_RC4_128_MD5 SSL_RSA_WITH_RC4_128_SHA
jppf.ssl.cipher.suites = SSL_RSA_WITH_RC4_128_MD5
# this property is only meaningful on the server side.
# possible values: none | want | need
jppf.ssl.client.auth = need

#------------------------------------------------------------------------------#
# Where to find the key|trust store, can be specified in 2 ways:               # 
# 1) as a file path:                                                           #
# jppf.ssl.keystore.file = <filepath>                                          #
# 2) as an arbitrary source with optional space-separated arguments:           #
#   jppf.ssl.keystore.source = \                                               #
#     <subclass of org.jppf.ssl.SecureStoreSource> arg1 ... argN               #
# the following are equivalent:                                                #
# - jppf.ssl.keystore.file = <filepath>                                        #
# - jppf.ssl.keystore.source = org.jppf.ssl.FileStoreSource <filepath>         #
#------------------------------------------------------------------------------#

# path to the key store on the file system.
# Relative paths are relative to the current working directory as specified by System.getProperty("user.dir")
jppf.ssl.keystore.file = config/ssl3/driver_keystore.ks
# an implementation of Callable<InputStream> with optional space-separated arguments
#jppf.ssl.keytstore.source = org.jppf.ssl.FileStoreSource config/ssl3/driver_keystore.ks

#------------------------------------------------------------------------------#
# The key|trust store password can be specified in 2 ways:                     # 
# 1) as a plain text password:                                                 #
#   jppf.ssl.keystore.password = <password>                                    #
# 2) as an arbitrary source with optional space-separated arguments:           #
#   jppf.ssl.keystore.password.source = \                                      #
#     implementation_of_Callable<chr[]>  arg1 ... argN                         #
# the following are equivalent:                                                #
# - jppf.ssl.keystore.password = <password>                                    #
# - jppf.ssl.keystore.password.source = \                                      #
#     org.jppf.ssl.PlainTextPassword <password>                                #
#------------------------------------------------------------------------------#
# keytore password
jppf.ssl.keystore.password = password
# keystore password
#jppf.ssl.keyststore.password.source = org.jppf.sll.PlainTextPassword password

# path to the trust store on the file system 
jppf.ssl.truststore.file = config/ssl3/driver_truststore.ks
# an implementation of Callable<InputStream> with optional space-separated arguments
#jppf.ssl.truststore.source = org.jppf.ssl.FileStoreSource config/ssl3/driver_truststore.ks
# truststore password
jppf.ssl.truststore.password = password
# truststore password
#jppf.ssl.truststore.password.source = org.jppf.ssl.PlainTextPassword password

#------------------------------------------------------------------------------#
# Separate trustore for client certificates                                    #
#------------------------------------------------------------------------------#

jppf.ssl.client.distinct.truststore = true
# path to the trust store for client certificates on the file system 
jppf.ssl.client.truststore.file = config/ssl3/driver_client_truststore.ks
# an implementation of Callable<InputStream> with optional space-separated arguments
#jppf.ssl.client.truststore.source = org.jppf.ssl.FileStoreSource config/ssl3/driver_client_truststore.ks
# truststore password
jppf.ssl.client.truststore.password = password
# truststore password
#jppf.ssl.client.truststore.password.source = org.jppf.ssl.PlainTextPassword password


