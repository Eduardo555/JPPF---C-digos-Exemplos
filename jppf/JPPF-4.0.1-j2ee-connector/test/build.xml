<!--
	JPPF
	Copyright (C) 2005-2014 JPPF Team. 
	http://www.jppf.org

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<project name="J2EE Connector Tests" default="build" basedir=".">

  <!-- ========================================================================= -->
  <!--                          Property definitions                             -->
  <!-- ========================================================================= -->

  <property name="build.sysclasspath" value="last"/>
  <property name="classes.dir"        value="${basedir}/classes" />
  <property name="src.dir"            value="${basedir}/src" />
  <property name="config.dir"         value="${basedir}/config" />
  <property name="build.dir"          value="${basedir}/build" />
  <property name="lib.dir"            value="${basedir}/../lib" />
  <property name="war.prefix"         value="JPPF_J2EE_Tests" />
  <property file="${basedir}/../build.number" />
  <property name="geronimo.name"      value="geronimo-tomcat7-javaee6-3.0.0"/>
  <property name="geronimo.dir"       value="${user.home}/geronimo"/>
  <property name="j2e.dir"            value="${basedir}/../build" />

  <!-- ========================================================================= -->
  <!--                           Classpath definitions                           -->
  <!-- ========================================================================= -->

  <path id="project.classpath">
    <pathelement location="${classes.dir}" />
    <pathelement location="${config.dir}" />
    <pathelement location="${basedir}/../classes/jca" />
    <fileset dir="${lib.dir}" includes="**/*.jar" excludes="**/slf4j-jdk*.jar"/>
    <pathelement location="${basedir}/config" />
  </path>

  <path id="generate.classpath">
    <pathelement location="${classes.dir}"/>
    <pathelement location="${config.dir}"/>
    <pathelement location="${basedir}/../classes/jca"/>
    <fileset dir="${lib.dir}" includes="**/*.jar" excludes="**/slf4j-jdk*.jar"/>
  </path>

  <!-- ========================================================================= -->
  <!--                                    Clean                                  -->
  <!-- ========================================================================= -->

  <target name="clean">
    <delete quiet="true">
      <fileset dir="${classes.dir}" includes="**/*.*" />
    </delete>
    <delete quiet="true">
      <fileset dir="${build.dir}" includes="**/*.*" />
    </delete>
  </target>

  <!-- ========================================================================= -->
  <!--                                    Init                                   -->
  <!-- ========================================================================= -->

  <target name="init" depends="clean" description="Initialize ressources">
    <mkdir dir="${build.dir}" />
  </target>

  <!-- ========================================================================= -->
  <!--                         Build everything                                  -->
  <!-- ========================================================================= -->

  <target name="build" depends="war"/>
  <target name="build.run" depends="build, geronimo.install, geronimo.start, geronimo.deploy.connector, geronimo.deploy.testwar, run.tests, geronimo.stop"/>

  <!-- ========================================================================= -->
  <!--                     Generates the list of test classes                    -->
  <!-- ========================================================================= -->

  <target name="generate.tests.list">
    <echo message="basedir=${basedir}, src.dir=${src.dir}"/>
    <echo message="Generating the list of test classes"/>
    <java fork="yes" classname="test.org.jppf.test.runner.TestListBuilder" classpathref="generate.classpath">
      <jvmarg value="-server"/>
      <jvmarg value="-Xmx64m"/>
      <arg value="${classes.dir}"/>
      <arg value="${classes.dir}/TestClasses.txt"/>
    </java>
    <copy todir="${src.dir}/resources" file="${classes.dir}/TestClasses.txt" overwrite="true"/>
  </target>

  <!-- ========================================================================= -->
  <!--                         Compile the application                           -->
  <!-- ========================================================================= -->

  <target name="compile" depends="init">
    <echo message="compiling the project..." />
    <javac srcdir="" destdir="${classes.dir}" source="1.7" target="1.7" debug="on" deprecation="off" optimize="on" includes="**/*.java">
      <classpath refid="project.classpath" />
      <compilerarg line="-Xlint:unchecked" />
      <src path="${src.dir}/java" />
    </javac>
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}/resources"/>
    </copy>
    <antcall target="generate.tests.list"/>
  </target>

  <!-- ========================================================================= -->
  <!--                     Generate the WAR file                                 -->
  <!-- ========================================================================= -->

  <target name="war" depends="compile">
    <echo message="creating the WAR ..." />
    <war warfile="${build.dir}/${war.prefix}.war" webxml="${basedir}/webapp/WEB-INF/web.xml" >
      <manifest>
        <attribute name="JPPF-Version" value="${version.number}" />
        <attribute name="JPPF-Build" value="${build.number}" />
        <attribute name="JPPF-BuildDate" value="${readable.now}" />
      </manifest>
      <zipfileset dir="${basedir}/webapp/WEB-INF" excludes="web.xml" prefix="WEB-INF"/>
      <zipfileset dir="${classes.dir}" prefix="WEB-INF/classes"/>
      <zipfileset dir="${basedir}/../classes/j2eeclient" prefix="WEB-INF/classes"/>
      <zipfileset dir="${basedir}/webapp" includes="*.*" />
      <zipfileset dir="${lib.dir}" includes="" prefix="WEB-INF/lib">
        <include name="junit-4.10.jar"/>
        <include name="jppf-test-framework.jar"/>
      </zipfileset>
    </war>
  </target>

  <!-- ========================================================================= -->
  <!--                          Run the tests                                    -->
  <!-- ========================================================================= -->

  <target name="run.tests">
    <echo message="Running the tests"/>
    <java fork="yes" classname="test.org.jppf.test.runner.JPPFTestRunner" classpathref="project.classpath" resultproperty="test.result">
      <jvmarg value="-server"/>
      <jvmarg value="-Xmx256m"/>
      <jvmarg value="-Dlog4j.configuration=log4j-client.properties"/>
      <arg value="-u"/>
      <arg value="http://localhost:8080/jppfunittests/performTests?remoteClient=true"/>
    </java>
  </target>

  <!-- ========================================================================= -->
  <!--                       Download and install Geronimo                       -->
  <!-- ========================================================================= -->

  <target name="geronimo.install" depends="">
    <echo message="downloading geronimo 3.0.0 ..." />
    <mkdir dir="${geronimo.dir}"/>
    <get dest="${geronimo.dir}/${geronimo.name}.tar.gz" verbose="true" skipexisting="true">
      <first>
        <restrict>
          <resourcelist>
            <file file="${basedir}/bin/geronimo-mirrors.txt"/>
          </resourcelist>
          <exists/>
        </restrict>
      </first>
    </get>
    <delete dir="${geronimo.dir}/${geronimo.name}" quiet="false"/>
    <untar src="${geronimo.dir}/${geronimo.name}.tar.gz" dest="${user.home}/geronimo" compression="gzip"/>
    <copy tofile="${geronimo.dir}/${geronimo.name}/var/log/server-log4j.properties" file="${basedir}/bin/server-log4j.properties" overwrite="true"/>
    <!--
    <antcall target="start.geronimo"/>
    -->
  </target>

  <!-- ========================================================================= -->
  <!--                       Start and stop Geronimo                             -->
  <!-- ========================================================================= -->

  <target name="geronimo.start" depends="">
    <echo message="starting geronimo 3.0.0 ..." />
    <exec dir="${geronimo.dir}/${geronimo.name}/bin" executable="cmd">
      <arg value="/c"/>
      <arg value="startup.bat"/>
      <arg value="jpda"/>
    </exec>    
    <waitfor maxwait="1" maxwaitunit="minute" checkevery="1000">
      <http url="http://localhost:8080/"/>
    </waitfor>
  </target>

  <target name="geronimo.stop" depends="">
    <echo message="stopping geronimo 3.0.0 ..." />
    <exec dir="${geronimo.dir}/${geronimo.name}/bin" executable="cmd">
      <arg value="/c"/>
      <arg value="geronimo"/>
      <arg value="stop"/>
      <arg value="--user"/>
      <arg value="system"/>
      <arg value="--password"/>
      <arg value="manager"/>
    </exec>    
    <waitfor maxwait="1" maxwaitunit="minute" checkevery="1000">
      <not>
        <http url="http://localhost:8080/"/>
      </not>
    </waitfor>
  </target>

  <!-- ========================================================================= -->
  <!--                       Deploy/undeploy modules                             -->
  <!-- ========================================================================= -->

  <target name="geronimo.deploy.connector" depends="">
    <antcall target="geronimo.deploy"><param name="resource" value="${j2e.dir}/jppf_ra_Geronimo.rar"/></antcall>
  </target>

  <target name="geronimo.deploy.testwar" depends="">
    <antcall target="geronimo.deploy"><param name="resource" value="${build.dir}/${war.prefix}.war"/></antcall>
  </target>

  <target name="geronimo.undeploy.connector" depends="">
    <antcall target="geronimo.undeploy"><param name="mid" value="JPPF/jca-client/2.0/rar"/></antcall>
  </target>

  <target name="geronimo.undeploy.testwar" depends="">
    <antcall target="geronimo.undeploy"><param name="mid" value="JPPF/unit.tests/2.0/war"/></antcall>
  </target>

  <target name="geronimo.deploy" depends="">
    <echo message="deploying ${resource} ..." />
    <exec dir="${geronimo.dir}/${geronimo.name}/bin" executable="cmd">
      <arg value="/c"/>
      <arg value="deploy.bat"/>
      <arg value="--user"/>
      <arg value="system"/>
      <arg value="--password"/>
      <arg value="manager"/>
      <arg value="deploy"/>
      <arg value="${resource}"/>
    </exec>    
  </target>

  <target name="geronimo.undeploy" depends="">
    <echo message="un-deploying ${mid} ..." />
    <exec dir="${geronimo.dir}/${geronimo.name}/bin" executable="cmd">
      <arg value="/c"/>
      <arg value="deploy.bat"/>
      <arg value="--user"/>
      <arg value="system"/>
      <arg value="--password"/>
      <arg value="manager"/>
      <arg value="undeploy"/>
      <arg value="${mid}"/>
    </exec>    
  </target>

</project>
